{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9","program":"/home/saif/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=819bb17ccc05d1b8","-C","extra-filename=-819bb17ccc05d1b8","--out-dir","/home/saif/projects/playrust/target/rls/debug/deps","-L","dependency=/home/saif/projects/playrust/target/rls/debug/deps","--extern","bytes=/home/saif/projects/playrust/target/rls/debug/deps/libbytes-6f84e9e509e40b5c.rmeta","--extern","futures_core=/home/saif/projects/playrust/target/rls/debug/deps/libfutures_core-65fff6f399cd7f53.rmeta","--extern","futures_sink=/home/saif/projects/playrust/target/rls/debug/deps/libfutures_sink-ece4ed231bd496be.rmeta","--extern","log=/home/saif/projects/playrust/target/rls/debug/deps/liblog-c78037e96bf7a644.rmeta","--extern","pin_project_lite=/home/saif/projects/playrust/target/rls/debug/deps/libpin_project_lite-0aaba19a77115d16.rmeta","--extern","tokio=/home/saif/projects/playrust/target/rls/debug/deps/libtokio-0b1b587d384c3fbe.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/saif/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/saif/projects/playrust/target/rls/debug/deps/libtokio_util-819bb17ccc05d1b8.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[8983302293752318864,0]},"crate_root":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src","external_crates":[{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[6651269719699919063,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[5314938362831806024,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3192916554191843392,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10801551532821350179,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[17712696282143808288,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17759323731357012152,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14544669950029098253,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[7140361926623002963,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7912653715525474172,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[9995494595343579593,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7588845087494698681,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[1970575902162233525,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[17110431802946872365,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[13012552651923263309,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[12999591111048205696,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[5038749270737079727,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[4159898706074811085,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":18,"id":{"name":"adler","disambiguator":[8750230721255451893,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[1956939412839304600,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":20,"id":{"name":"futures_core","disambiguator":[2659877968316655252,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":21,"id":{"name":"futures_sink","disambiguator":[17271045042861320725,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":22,"id":{"name":"tokio","disambiguator":[11797122711279510094,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":23,"id":{"name":"parking_lot","disambiguator":[4439584096583976761,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":24,"id":{"name":"instant","disambiguator":[17081669115862444966,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":25,"id":{"name":"cfg_if","disambiguator":[11900951980957517807,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":26,"id":{"name":"lock_api","disambiguator":[12682360784623646209,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":27,"id":{"name":"scopeguard","disambiguator":[7389675204133512052,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":28,"id":{"name":"parking_lot_core","disambiguator":[3233181850913878725,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":29,"id":{"name":"smallvec","disambiguator":[1603597397311112112,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":30,"id":{"name":"libc","disambiguator":[4939918902751890021,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","num":31,"id":{"name":"pin_project_lite","disambiguator":[3650398032983682914,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":32,"id":{"name":"mio","disambiguator":[2328091442476404014,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","num":33,"id":{"name":"log","disambiguator":[16138615073828880648,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","num":34,"id":{"name":"bytes","disambiguator":[6191440968204973069,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":35,"id":{"name":"once_cell","disambiguator":[14987983098596234562,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":36,"id":{"name":"tokio_macros","disambiguator":[11761665270972396810,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":37,"id":{"name":"memchr","disambiguator":[11363686017877364425,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":38,"id":{"name":"num_cpus","disambiguator":[9558854204768697237,0]}},{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","num":39,"id":{"name":"signal_hook_registry","disambiguator":[15406112251153177406,0]}}],"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1191},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069771,"byte_end":15069781,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":561},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069820,"byte_end":15069827,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":578},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069866,"byte_end":15069873,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1513},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15070035,"byte_end":15070041,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1227},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15070043,"byte_end":15070054,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1472},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15070102,"byte_end":15070112,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1431},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15070161,"byte_end":15070172,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1251},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15070234,"byte_end":15070254,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1008},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15070256,"byte_end":15070281,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1269},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15070330,"byte_end":15070340,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1291},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15070342,"byte_end":15070357,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1299},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15070422,"byte_end":15070439,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1323},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15070441,"byte_end":15070463,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":511}},{"kind":"Use","ref_id":{"krate":0,"index":1331},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6970,"byte_end":6979,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":62},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6981,"byte_end":6998,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":66},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7000,"byte_end":7025,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1406},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7088,"byte_end":7098,"line_start":9,"line_end":9,"column_start":15,"column_end":25},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7145,"byte_end":7158,"line_start":12,"line_end":12,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":358},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":7201,"byte_end":7218,"line_start":15,"line_end":15,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":5378,"line_start":1,"line_end":200,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":511},{"krate":0,"index":14},{"krate":0,"index":393},{"krate":0,"index":462}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":365,"byte_end":402,"line_start":15,"line_end":15,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":403,"byte_end":406,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":407,"byte_end":464,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":465,"byte_end":529,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":530,"byte_end":605,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":606,"byte_end":609,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":610,"byte_end":646,"line_start":21,"line_end":21,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":511},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":512},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":686},{"krate":0,"index":689},{"krate":0,"index":692},{"krate":0,"index":695},{"krate":0,"index":793},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":800},{"krate":0,"index":873},{"krate":0,"index":876},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":1053},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":1060},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1121},{"krate":0,"index":1124},{"krate":0,"index":1184},{"krate":0,"index":1185},{"krate":0,"index":1188}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/cfg.rs","byte_start":5454,"byte_end":5479,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15059499,"byte_end":15059552,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15059553,"byte_end":15059556,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15059557,"byte_end":15059632,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15059633,"byte_end":15059698,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15059699,"byte_end":15059702,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15059703,"byte_end":15059783,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15059784,"byte_end":15059859,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15059860,"byte_end":15059908,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15059909,"byte_end":15059912,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15059913,"byte_end":15059936,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15059937,"byte_end":15059940,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15059941,"byte_end":15060020,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060021,"byte_end":15060100,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060101,"byte_end":15060172,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060173,"byte_end":15060243,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060244,"byte_end":15060322,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060323,"byte_end":15060399,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060400,"byte_end":15060433,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060434,"byte_end":15060437,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060438,"byte_end":15060518,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060519,"byte_end":15060599,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060600,"byte_end":15060650,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060651,"byte_end":15060654,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060655,"byte_end":15060706,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060707,"byte_end":15060756,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060757,"byte_end":15060808,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060809,"byte_end":15060812,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060813,"byte_end":15060878,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060879,"byte_end":15060882,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060883,"byte_end":15060960,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15060961,"byte_end":15061002,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061003,"byte_end":15061006,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061007,"byte_end":15061087,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061088,"byte_end":15061167,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061168,"byte_end":15061246,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061247,"byte_end":15061326,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061327,"byte_end":15061341,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061342,"byte_end":15061345,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061346,"byte_end":15061425,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061426,"byte_end":15061505,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061506,"byte_end":15061523,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061524,"byte_end":15061527,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061528,"byte_end":15061605,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061606,"byte_end":15061685,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061686,"byte_end":15061763,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061764,"byte_end":15061834,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061835,"byte_end":15061884,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061885,"byte_end":15061888,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061889,"byte_end":15061902,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061903,"byte_end":15061935,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15061936,"byte_end":15062003,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062004,"byte_end":15062118,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062119,"byte_end":15062156,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062157,"byte_end":15062218,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062219,"byte_end":15062268,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062269,"byte_end":15062272,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062273,"byte_end":15062314,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062315,"byte_end":15062325,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062326,"byte_end":15062410,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062411,"byte_end":15062467,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062468,"byte_end":15062471,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062472,"byte_end":15062493,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062494,"byte_end":15062561,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062562,"byte_end":15062590,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062591,"byte_end":15062604,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062605,"byte_end":15062623,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062624,"byte_end":15062633,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062634,"byte_end":15062637,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062638,"byte_end":15062697,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062698,"byte_end":15062722,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062723,"byte_end":15062732,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062733,"byte_end":15062738,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062739,"byte_end":15062747,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062748,"byte_end":15062755,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062756,"byte_end":15062830,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062831,"byte_end":15062834,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062835,"byte_end":15062857,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062858,"byte_end":15062861,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062862,"byte_end":15062939,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15062940,"byte_end":15063016,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063017,"byte_end":15063096,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063097,"byte_end":15063151,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063152,"byte_end":15063155,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063156,"byte_end":15063200,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063201,"byte_end":15063208,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063209,"byte_end":15063244,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063245,"byte_end":15063276,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063277,"byte_end":15063280,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063281,"byte_end":15063310,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063311,"byte_end":15063314,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063315,"byte_end":15063354,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063355,"byte_end":15063358,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063359,"byte_end":15063397,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063398,"byte_end":15063425,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063426,"byte_end":15063462,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063463,"byte_end":15063466,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063467,"byte_end":15063485,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063486,"byte_end":15063508,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063509,"byte_end":15063539,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063540,"byte_end":15063594,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063595,"byte_end":15063625,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063626,"byte_end":15063683,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063684,"byte_end":15063716,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063717,"byte_end":15063730,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063731,"byte_end":15063734,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063735,"byte_end":15063769,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063770,"byte_end":15063814,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063815,"byte_end":15063867,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063868,"byte_end":15063935,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063936,"byte_end":15063939,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15063940,"byte_end":15064014,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064015,"byte_end":15064081,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064082,"byte_end":15064111,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064112,"byte_end":15064159,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064160,"byte_end":15064212,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064213,"byte_end":15064284,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064285,"byte_end":15064304,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064305,"byte_end":15064318,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064319,"byte_end":15064322,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064323,"byte_end":15064362,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064363,"byte_end":15064418,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064419,"byte_end":15064437,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064438,"byte_end":15064514,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064515,"byte_end":15064581,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064582,"byte_end":15064634,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064635,"byte_end":15064638,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064639,"byte_end":15064719,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064720,"byte_end":15064745,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064746,"byte_end":15064778,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064779,"byte_end":15064792,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064793,"byte_end":15064796,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064797,"byte_end":15064869,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064870,"byte_end":15064896,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064897,"byte_end":15064948,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064949,"byte_end":15064985,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064986,"byte_end":15064989,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15064990,"byte_end":15065068,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065069,"byte_end":15065112,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065113,"byte_end":15065160,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065161,"byte_end":15065197,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065198,"byte_end":15065242,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065243,"byte_end":15065299,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065300,"byte_end":15065348,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065349,"byte_end":15065371,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065372,"byte_end":15065390,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065391,"byte_end":15065404,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065405,"byte_end":15065414,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065415,"byte_end":15065420,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065421,"byte_end":15065428,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065429,"byte_end":15065432,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065433,"byte_end":15065456,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065457,"byte_end":15065460,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065461,"byte_end":15065539,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065540,"byte_end":15065613,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065614,"byte_end":15065690,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065691,"byte_end":15065771,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065772,"byte_end":15065788,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065789,"byte_end":15065792,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065793,"byte_end":15065873,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065874,"byte_end":15065953,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15065954,"byte_end":15066034,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066035,"byte_end":15066107,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066108,"byte_end":15066111,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066112,"byte_end":15066189,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066190,"byte_end":15066268,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066269,"byte_end":15066342,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066343,"byte_end":15066409,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066410,"byte_end":15066413,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066414,"byte_end":15066427,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066428,"byte_end":15066461,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066462,"byte_end":15066496,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066497,"byte_end":15066534,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066535,"byte_end":15066602,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066603,"byte_end":15066638,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066639,"byte_end":15066700,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066701,"byte_end":15066747,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066748,"byte_end":15066809,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066810,"byte_end":15066813,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066814,"byte_end":15066842,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066843,"byte_end":15066846,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066847,"byte_end":15066888,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066889,"byte_end":15066899,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066900,"byte_end":15066924,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15066925,"byte_end":15066999,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067000,"byte_end":15067042,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067043,"byte_end":15067057,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067058,"byte_end":15067115,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067116,"byte_end":15067165,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067166,"byte_end":15067180,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067181,"byte_end":15067218,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067219,"byte_end":15067270,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067271,"byte_end":15067317,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067318,"byte_end":15067348,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067349,"byte_end":15067363,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067364,"byte_end":15067373,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067374,"byte_end":15067379,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067380,"byte_end":15067387,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067388,"byte_end":15067395,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067396,"byte_end":15067471,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067472,"byte_end":15067545,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067546,"byte_end":15067588,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067589,"byte_end":15067592,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067593,"byte_end":15067615,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067616,"byte_end":15067619,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067620,"byte_end":15067697,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067698,"byte_end":15067774,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067775,"byte_end":15067851,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067852,"byte_end":15067875,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067876,"byte_end":15067879,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067880,"byte_end":15067925,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067926,"byte_end":15067933,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067934,"byte_end":15067969,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067970,"byte_end":15067994,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067995,"byte_end":15067998,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15067999,"byte_end":15068028,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068029,"byte_end":15068032,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068033,"byte_end":15068072,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068073,"byte_end":15068076,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068077,"byte_end":15068123,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068124,"byte_end":15068160,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068161,"byte_end":15068164,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068165,"byte_end":15068256,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068257,"byte_end":15068331,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068332,"byte_end":15068354,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068355,"byte_end":15068388,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068389,"byte_end":15068436,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068437,"byte_end":15068489,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068490,"byte_end":15068565,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068566,"byte_end":15068585,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068586,"byte_end":15068599,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068600,"byte_end":15068603,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068604,"byte_end":15068656,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068657,"byte_end":15068734,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068735,"byte_end":15068799,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068800,"byte_end":15068803,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068804,"byte_end":15068847,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068848,"byte_end":15068888,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068889,"byte_end":15068892,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068893,"byte_end":15068950,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068951,"byte_end":15068997,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15068998,"byte_end":15069049,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069050,"byte_end":15069068,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069069,"byte_end":15069078,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069079,"byte_end":15069084,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069085,"byte_end":15069092,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069093,"byte_end":15069096,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069097,"byte_end":15069136,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069137,"byte_end":15069178,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069179,"byte_end":15069215,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069216,"byte_end":15069248,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069249,"byte_end":15069345,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069346,"byte_end":15069397,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069398,"byte_end":15069451,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069452,"byte_end":15069495,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069496,"byte_end":15069540,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069541,"byte_end":15069589,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069590,"byte_end":15069638,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069639,"byte_end":15069685,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15069686,"byte_end":15069725,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1191},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071749,"byte_end":15071759,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070592,"byte_end":15070677,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070678,"byte_end":15070681,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070682,"byte_end":15070720,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070721,"byte_end":15070759,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070760,"byte_end":15070763,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070764,"byte_end":15070777,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070778,"byte_end":15070781,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070782,"byte_end":15070863,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070864,"byte_end":15070867,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070868,"byte_end":15070907,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070908,"byte_end":15070941,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070942,"byte_end":15070971,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070972,"byte_end":15070975,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070976,"byte_end":15070983,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15070984,"byte_end":15071002,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071003,"byte_end":15071033,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071034,"byte_end":15071058,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071059,"byte_end":15071066,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071067,"byte_end":15071096,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071097,"byte_end":15071149,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071150,"byte_end":15071153,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071154,"byte_end":15071172,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071173,"byte_end":15071190,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071191,"byte_end":15071271,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071272,"byte_end":15071306,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071307,"byte_end":15071360,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071361,"byte_end":15071372,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071373,"byte_end":15071380,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071381,"byte_end":15071386,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071387,"byte_end":15071434,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071435,"byte_end":15071488,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071489,"byte_end":15071547,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071548,"byte_end":15071627,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071628,"byte_end":15071640,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071641,"byte_end":15071648,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071649,"byte_end":15071656,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071657,"byte_end":15071660,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071861,"byte_end":15071864,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071788,"byte_end":15071849,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":561},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073865,"byte_end":15073872,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":566}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15072579,"byte_end":15072614,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15072615,"byte_end":15072618,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15072619,"byte_end":15072688,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15072689,"byte_end":15072768,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15072769,"byte_end":15072841,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15072842,"byte_end":15072866,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15072867,"byte_end":15072870,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15072871,"byte_end":15072939,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15072940,"byte_end":15073017,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073018,"byte_end":15073079,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073080,"byte_end":15073083,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073084,"byte_end":15073145,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073146,"byte_end":15073208,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073209,"byte_end":15073212,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073213,"byte_end":15073276,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fullfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073277,"byte_end":15073340,"line_start":23,"line_end":23,"column_start":1,"column_end":64}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073341,"byte_end":15073420,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073421,"byte_end":15073495,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073496,"byte_end":15073515,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073516,"byte_end":15073519,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073520,"byte_end":15073588,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073589,"byte_end":15073651,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073652,"byte_end":15073727,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073728,"byte_end":15073768,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073769,"byte_end":15073772,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073773,"byte_end":15073809,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073810,"byte_end":15073854,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":562},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073920,"byte_end":15073924,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073879,"byte_end":15073910,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":563},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074690,"byte_end":15074695,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073931,"byte_end":15073983,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073988,"byte_end":15073991,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15073996,"byte_end":15074065,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074070,"byte_end":15074140,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074145,"byte_end":15074191,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074196,"byte_end":15074199,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074204,"byte_end":15074280,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074285,"byte_end":15074360,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074365,"byte_end":15074440,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074445,"byte_end":15074485,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074490,"byte_end":15074493,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074498,"byte_end":15074572,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074577,"byte_end":15074623,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074628,"byte_end":15074631,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074636,"byte_end":15074680,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077631,"byte_end":15077637,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074719,"byte_end":15074784,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074789,"byte_end":15074792,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074797,"byte_end":15074871,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074876,"byte_end":15074948,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15074953,"byte_end":15075026,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075031,"byte_end":15075074,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075079,"byte_end":15075082,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075087,"byte_end":15075160,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075165,"byte_end":15075228,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075233,"byte_end":15075308,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075313,"byte_end":15075388,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075393,"byte_end":15075416,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075421,"byte_end":15075424,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075429,"byte_end":15075501,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075506,"byte_end":15075580,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075585,"byte_end":15075655,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075660,"byte_end":15075663,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075668,"byte_end":15075736,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075741,"byte_end":15075812,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075817,"byte_end":15075897,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075902,"byte_end":15075914,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075919,"byte_end":15075922,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15075927,"byte_end":15075997,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076002,"byte_end":15076077,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076082,"byte_end":15076119,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076124,"byte_end":15076127,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076132,"byte_end":15076168,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076173,"byte_end":15076217,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076222,"byte_end":15076225,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076230,"byte_end":15076253,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076258,"byte_end":15076261,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076266,"byte_end":15076340,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076345,"byte_end":15076419,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076424,"byte_end":15076477,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076482,"byte_end":15076485,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076490,"byte_end":15076561,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076566,"byte_end":15076636,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076641,"byte_end":15076657,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076662,"byte_end":15076665,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076670,"byte_end":15076683,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076688,"byte_end":15076706,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076711,"byte_end":15076716,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076721,"byte_end":15076747,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076752,"byte_end":15076789,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076794,"byte_end":15076799,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076804,"byte_end":15076825,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076830,"byte_end":15076835,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076840,"byte_end":15076870,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076875,"byte_end":15076889,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076894,"byte_end":15076925,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076930,"byte_end":15076963,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076968,"byte_end":15076971,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15076976,"byte_end":15077069,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077074,"byte_end":15077092,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077097,"byte_end":15077100,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077105,"byte_end":15077177,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077182,"byte_end":15077242,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077247,"byte_end":15077299,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077304,"byte_end":15077366,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077371,"byte_end":15077438,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077443,"byte_end":15077446,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077451,"byte_end":15077479,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077484,"byte_end":15077493,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077498,"byte_end":15077503,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077508,"byte_end":15077515,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077520,"byte_end":15077523,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077528,"byte_end":15077597,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077602,"byte_end":15077623,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078803,"byte_end":15078813,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077718,"byte_end":15077790,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077795,"byte_end":15077844,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077849,"byte_end":15077852,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077857,"byte_end":15077925,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15077930,"byte_end":15077997,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078002,"byte_end":15078070,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078075,"byte_end":15078151,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078156,"byte_end":15078222,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078227,"byte_end":15078230,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078235,"byte_end":15078303,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078308,"byte_end":15078383,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078388,"byte_end":15078463,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078468,"byte_end":15078540,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078545,"byte_end":15078587,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078592,"byte_end":15078595,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078600,"byte_end":15078675,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078680,"byte_end":15078758,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15078763,"byte_end":15078795,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15080421,"byte_end":15080427,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":561},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15079231,"byte_end":15079311,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15079316,"byte_end":15079392,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15079397,"byte_end":15079400,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15079405,"byte_end":15079480,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15079485,"byte_end":15079555,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15079560,"byte_end":15079631,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15079636,"byte_end":15079708,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15079713,"byte_end":15079771,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15079776,"byte_end":15079779,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15079784,"byte_end":15079853,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15079858,"byte_end":15079933,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15079938,"byte_end":15080014,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15080019,"byte_end":15080041,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15080046,"byte_end":15080049,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15080054,"byte_end":15080127,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15080132,"byte_end":15080205,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15080210,"byte_end":15080286,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15080291,"byte_end":15080294,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15080299,"byte_end":15080335,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15080340,"byte_end":15080372,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/decoder.rs","byte_start":15080377,"byte_end":15080413,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":578},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15080761,"byte_end":15080768,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":580},{"krate":0,"index":581}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15080606,"byte_end":15080678,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15080679,"byte_end":15080699,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15080700,"byte_end":15080703,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15080704,"byte_end":15080750,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":580},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15081033,"byte_end":15081038,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15080781,"byte_end":15080813,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15080818,"byte_end":15080821,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15080826,"byte_end":15080903,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15080908,"byte_end":15080964,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15080969,"byte_end":15080972,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15080977,"byte_end":15081023,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15081389,"byte_end":15081395,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":578},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15081062,"byte_end":15081107,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15081112,"byte_end":15081115,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15081120,"byte_end":15081194,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15081199,"byte_end":15081279,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15081284,"byte_end":15081322,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15081327,"byte_end":15081330,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/encoder.rs","byte_start":15081335,"byte_end":15081381,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1513},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095032,"byte_end":15095038,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1516}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096811,"byte_end":15096814,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095180,"byte_end":15095260,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095265,"byte_end":15095346,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095351,"byte_end":15095354,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095359,"byte_end":15095434,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095439,"byte_end":15095509,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095514,"byte_end":15095583,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095588,"byte_end":15095660,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095665,"byte_end":15095723,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095728,"byte_end":15095731,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095736,"byte_end":15095807,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095812,"byte_end":15095889,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095894,"byte_end":15095970,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095975,"byte_end":15095997,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096002,"byte_end":15096005,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096010,"byte_end":15096083,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096088,"byte_end":15096161,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096166,"byte_end":15096242,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096247,"byte_end":15096250,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096255,"byte_end":15096331,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096336,"byte_end":15096412,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096417,"byte_end":15096492,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096497,"byte_end":15096532,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096537,"byte_end":15096540,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096545,"byte_end":15096581,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096586,"byte_end":15096618,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096623,"byte_end":15096660,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096665,"byte_end":15096703,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15096708,"byte_end":15096799,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15098422,"byte_end":15098435,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097027,"byte_end":15097107,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097112,"byte_end":15097193,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097198,"byte_end":15097247,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097252,"byte_end":15097255,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097260,"byte_end":15097335,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097340,"byte_end":15097410,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097415,"byte_end":15097484,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097489,"byte_end":15097561,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097566,"byte_end":15097624,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097629,"byte_end":15097632,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097637,"byte_end":15097708,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097713,"byte_end":15097790,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097795,"byte_end":15097871,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097876,"byte_end":15097898,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097903,"byte_end":15097906,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097911,"byte_end":15097984,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15097989,"byte_end":15098062,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15098067,"byte_end":15098143,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15098148,"byte_end":15098151,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15098156,"byte_end":15098192,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15098197,"byte_end":15098229,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15098234,"byte_end":15098271,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15098276,"byte_end":15098314,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15098319,"byte_end":15098410,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100582,"byte_end":15100592,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099005,"byte_end":15099085,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099090,"byte_end":15099171,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099176,"byte_end":15099179,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099184,"byte_end":15099259,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099264,"byte_end":15099334,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099339,"byte_end":15099410,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099415,"byte_end":15099487,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099492,"byte_end":15099550,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099555,"byte_end":15099558,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099563,"byte_end":15099634,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099639,"byte_end":15099716,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099721,"byte_end":15099797,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099802,"byte_end":15099824,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099829,"byte_end":15099832,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099837,"byte_end":15099916,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15099921,"byte_end":15099998,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100003,"byte_end":15100006,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100011,"byte_end":15100084,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100089,"byte_end":15100162,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100167,"byte_end":15100243,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100248,"byte_end":15100251,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100256,"byte_end":15100292,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100297,"byte_end":15100329,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100334,"byte_end":15100372,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100377,"byte_end":15100415,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100420,"byte_end":15100474,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100479,"byte_end":15100570,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101227,"byte_end":15101234,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15100944,"byte_end":15101007,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101012,"byte_end":15101025,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101030,"byte_end":15101033,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101038,"byte_end":15101113,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101118,"byte_end":15101188,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101193,"byte_end":15101215,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101578,"byte_end":15101585,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101287,"byte_end":15101358,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101363,"byte_end":15101376,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101381,"byte_end":15101384,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101389,"byte_end":15101464,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101469,"byte_end":15101539,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101544,"byte_end":15101566,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101948,"byte_end":15101959,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101650,"byte_end":15101728,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101733,"byte_end":15101746,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101751,"byte_end":15101754,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101759,"byte_end":15101834,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101839,"byte_end":15101909,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15101914,"byte_end":15101936,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":762},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102306,"byte_end":15102311,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102055,"byte_end":15102113,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102118,"byte_end":15102131,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102136,"byte_end":15102139,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102144,"byte_end":15102218,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102223,"byte_end":15102294,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102623,"byte_end":15102632,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102364,"byte_end":15102430,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102435,"byte_end":15102448,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102453,"byte_end":15102456,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102461,"byte_end":15102535,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102540,"byte_end":15102611,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":764},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102752,"byte_end":15102763,"line_start":208,"line_end":208,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102697,"byte_end":15102740,"line_start":207,"line_end":207,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":765},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102898,"byte_end":15102913,"line_start":213,"line_end":213,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102835,"byte_end":15102886,"line_start":212,"line_end":212,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103053,"byte_end":15103065,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15102997,"byte_end":15103041,"line_start":217,"line_end":217,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":767},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103202,"byte_end":15103218,"line_start":223,"line_end":223,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103138,"byte_end":15103190,"line_start":222,"line_end":222,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103568,"byte_end":15103578,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103303,"byte_end":15103366,"line_start":227,"line_end":227,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103371,"byte_end":15103374,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103379,"byte_end":15103454,"line_start":229,"line_end":229,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103459,"byte_end":15103529,"line_start":230,"line_end":230,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103534,"byte_end":15103556,"line_start":231,"line_end":231,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":769},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103950,"byte_end":15103960,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103628,"byte_end":15103702,"line_start":236,"line_end":236,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103707,"byte_end":15103748,"line_start":237,"line_end":237,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103753,"byte_end":15103756,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103761,"byte_end":15103836,"line_start":239,"line_end":239,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103841,"byte_end":15103911,"line_start":240,"line_end":240,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15103916,"byte_end":15103938,"line_start":241,"line_end":241,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1227},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15105934,"byte_end":15105945,"line_start":312,"line_end":312,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15105619,"byte_end":15105690,"line_start":305,"line_end":305,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15105691,"byte_end":15105763,"line_start":306,"line_end":306,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15105764,"byte_end":15105824,"line_start":307,"line_end":307,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15105825,"byte_end":15105828,"line_start":308,"line_end":308,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15105829,"byte_end":15105865,"line_start":309,"line_end":309,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15105883,"byte_end":15105922,"line_start":311,"line_end":311,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1230},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15106031,"byte_end":15106033,"line_start":314,"line_end":314,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15105958,"byte_end":15106022,"line_start":313,"line_end":313,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1231},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15106065,"byte_end":15106070,"line_start":317,"line_end":317,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15106043,"byte_end":15106056,"line_start":316,"line_end":316,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1232},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15106135,"byte_end":15106143,"line_start":320,"line_end":320,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15106080,"byte_end":15106126,"line_start":319,"line_end":319,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1233},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15106230,"byte_end":15106239,"line_start":323,"line_end":323,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1227},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15106160,"byte_end":15106221,"line_start":322,"line_end":322,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15106472,"byte_end":15106475,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15106420,"byte_end":15106460,"line_start":331,"line_end":331,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1472},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15107204,"byte_end":15107214,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1475}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":842},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15107465,"byte_end":15107468,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15107397,"byte_end":15107453,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":843},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15107816,"byte_end":15107829,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15107700,"byte_end":15107782,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15107787,"byte_end":15107804,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108583,"byte_end":15108590,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108296,"byte_end":15108359,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108364,"byte_end":15108381,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108386,"byte_end":15108389,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108394,"byte_end":15108469,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108474,"byte_end":15108544,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108549,"byte_end":15108571,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108938,"byte_end":15108945,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108643,"byte_end":15108714,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108719,"byte_end":15108736,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108741,"byte_end":15108744,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108749,"byte_end":15108824,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108829,"byte_end":15108899,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108904,"byte_end":15108926,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109312,"byte_end":15109323,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109010,"byte_end":15109088,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109093,"byte_end":15109110,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109115,"byte_end":15109118,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109123,"byte_end":15109198,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109203,"byte_end":15109273,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109278,"byte_end":15109300,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109688,"byte_end":15109698,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109419,"byte_end":15109486,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109491,"byte_end":15109494,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109499,"byte_end":15109574,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109579,"byte_end":15109649,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109654,"byte_end":15109676,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109810,"byte_end":15109817,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109748,"byte_end":15109798,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109940,"byte_end":15109951,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15109870,"byte_end":15109928,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15110071,"byte_end":15110082,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15110016,"byte_end":15110059,"line_start":111,"line_end":111,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15110212,"byte_end":15110227,"line_start":117,"line_end":117,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"pub fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15110149,"byte_end":15110200,"line_start":116,"line_end":116,"column_start":5,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":1431},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15112328,"byte_end":15112339,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1434}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15112546,"byte_end":15112549,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15112477,"byte_end":15112534,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":925},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113107,"byte_end":15113114,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15112819,"byte_end":15112882,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15112887,"byte_end":15112905,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15112910,"byte_end":15112913,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15112918,"byte_end":15112993,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15112998,"byte_end":15113068,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113073,"byte_end":15113095,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113463,"byte_end":15113470,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113167,"byte_end":15113238,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113243,"byte_end":15113261,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113266,"byte_end":15113269,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113274,"byte_end":15113349,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113354,"byte_end":15113424,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113429,"byte_end":15113451,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113838,"byte_end":15113849,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113535,"byte_end":15113613,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113618,"byte_end":15113636,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113641,"byte_end":15113644,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113649,"byte_end":15113724,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113729,"byte_end":15113799,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113804,"byte_end":15113826,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114215,"byte_end":15114225,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15113945,"byte_end":15114013,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114018,"byte_end":15114021,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114026,"byte_end":15114101,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114106,"byte_end":15114176,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114181,"byte_end":15114203,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114337,"byte_end":15114344,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114275,"byte_end":15114325,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114467,"byte_end":15114478,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114397,"byte_end":15114455,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114599,"byte_end":15114611,"line_start":92,"line_end":92,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"pub fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114543,"byte_end":15114587,"line_start":91,"line_end":91,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114742,"byte_end":15114758,"line_start":97,"line_end":97,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"pub fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114678,"byte_end":15114730,"line_start":96,"line_end":96,"column_start":5,"column_end":57}}]},{"kind":"Mod","id":{"krate":0,"index":954},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":955},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":975},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":982},{"krate":0,"index":985},{"krate":0,"index":988},{"krate":0,"index":991},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":998},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1005},{"krate":0,"index":1239},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1008},{"krate":0,"index":1251},{"krate":0,"index":1254},{"krate":0,"index":1256},{"krate":0,"index":1258},{"krate":0,"index":1264},{"krate":0,"index":1266},{"krate":0,"index":1268},{"krate":0,"index":1010},{"krate":0,"index":1017},{"krate":0,"index":1021},{"krate":0,"index":1025},{"krate":0,"index":1027},{"krate":0,"index":1046},{"krate":0,"index":1048},{"krate":0,"index":1050},{"krate":0,"index":1052}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116285,"byte_end":15116337,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116338,"byte_end":15116341,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116342,"byte_end":15116412,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116413,"byte_end":15116471,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116472,"byte_end":15116544,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116545,"byte_end":15116615,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116616,"byte_end":15116683,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116684,"byte_end":15116687,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116688,"byte_end":15116709,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116710,"byte_end":15116713,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116714,"byte_end":15116789,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116790,"byte_end":15116861,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116862,"byte_end":15116933,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15116934,"byte_end":15117004,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117005,"byte_end":15117045,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117046,"byte_end":15117049,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117050,"byte_end":15117057,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117058,"byte_end":15117101,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117102,"byte_end":15117160,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117161,"byte_end":15117164,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117165,"byte_end":15117220,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117221,"byte_end":15117263,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117264,"byte_end":15117269,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117270,"byte_end":15117322,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117323,"byte_end":15117328,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117329,"byte_end":15117351,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117352,"byte_end":15117359,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117360,"byte_end":15117363,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117364,"byte_end":15117436,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117437,"byte_end":15117508,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117509,"byte_end":15117528,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117529,"byte_end":15117532,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117533,"byte_end":15117544,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117545,"byte_end":15117594,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117595,"byte_end":15117644,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117645,"byte_end":15117694,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117695,"byte_end":15117702,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117703,"byte_end":15117706,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117707,"byte_end":15117745,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117746,"byte_end":15117749,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117750,"byte_end":15117757,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117758,"byte_end":15117801,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117802,"byte_end":15117860,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117861,"byte_end":15117864,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117865,"byte_end":15117890,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117891,"byte_end":15117912,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117913,"byte_end":15117916,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117917,"byte_end":15117993,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15117994,"byte_end":15118003,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118004,"byte_end":15118046,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118047,"byte_end":15118052,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118053,"byte_end":15118126,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118127,"byte_end":15118174,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118175,"byte_end":15118178,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118179,"byte_end":15118216,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118217,"byte_end":15118231,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118232,"byte_end":15118237,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118238,"byte_end":15118245,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118246,"byte_end":15118249,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118250,"byte_end":15118292,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118293,"byte_end":15118296,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118297,"byte_end":15118308,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118309,"byte_end":15118348,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118349,"byte_end":15118388,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118389,"byte_end":15118428,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118429,"byte_end":15118436,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118437,"byte_end":15118440,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118441,"byte_end":15118455,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118456,"byte_end":15118459,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118460,"byte_end":15118535,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118536,"byte_end":15118609,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118610,"byte_end":15118676,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118677,"byte_end":15118746,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118747,"byte_end":15118812,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118813,"byte_end":15118816,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118817,"byte_end":15118833,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118834,"byte_end":15118837,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118838,"byte_end":15118914,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118915,"byte_end":15118956,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118957,"byte_end":15118960,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118961,"byte_end":15118968,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15118969,"byte_end":15119000,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119001,"byte_end":15119051,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119052,"byte_end":15119093,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119094,"byte_end":15119129,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119130,"byte_end":15119178,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119179,"byte_end":15119210,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119211,"byte_end":15119259,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119260,"byte_end":15119309,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119310,"byte_end":15119332,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119333,"byte_end":15119340,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119341,"byte_end":15119363,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119364,"byte_end":15119371,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119372,"byte_end":15119375,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119376,"byte_end":15119424,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119425,"byte_end":15119428,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119429,"byte_end":15119440,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119441,"byte_end":15119493,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119494,"byte_end":15119559,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119560,"byte_end":15119625,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119626,"byte_end":15119691,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119692,"byte_end":15119699,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119700,"byte_end":15119703,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119704,"byte_end":15119780,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119781,"byte_end":15119855,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119856,"byte_end":15119928,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15119929,"byte_end":15120005,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120006,"byte_end":15120048,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120049,"byte_end":15120052,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120053,"byte_end":15120069,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120070,"byte_end":15120073,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120074,"byte_end":15120149,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120150,"byte_end":15120191,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120192,"byte_end":15120195,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120196,"byte_end":15120203,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120204,"byte_end":15120235,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120236,"byte_end":15120286,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120287,"byte_end":15120328,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120329,"byte_end":15120364,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120365,"byte_end":15120413,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120414,"byte_end":15120445,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120446,"byte_end":15120494,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120495,"byte_end":15120554,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120555,"byte_end":15120577,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120578,"byte_end":15120585,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120586,"byte_end":15120608,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120609,"byte_end":15120616,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120617,"byte_end":15120620,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120621,"byte_end":15120669,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120670,"byte_end":15120673,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120674,"byte_end":15120685,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120686,"byte_end":15120735,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120736,"byte_end":15120790,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120791,"byte_end":15120845,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120846,"byte_end":15120900,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120901,"byte_end":15120908,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120909,"byte_end":15120912,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120913,"byte_end":15120986,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15120987,"byte_end":15121054,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121055,"byte_end":15121058,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121059,"byte_end":15121075,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121076,"byte_end":15121079,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121080,"byte_end":15121156,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121157,"byte_end":15121229,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121230,"byte_end":15121269,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121270,"byte_end":15121273,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121274,"byte_end":15121281,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121282,"byte_end":15121313,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121314,"byte_end":15121364,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121365,"byte_end":15121406,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121407,"byte_end":15121442,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121443,"byte_end":15121491,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121492,"byte_end":15121523,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121524,"byte_end":15121571,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121572,"byte_end":15121592,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121593,"byte_end":15121615,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121616,"byte_end":15121623,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121624,"byte_end":15121646,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121647,"byte_end":15121654,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121655,"byte_end":15121658,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121659,"byte_end":15121707,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121708,"byte_end":15121711,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121712,"byte_end":15121723,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121724,"byte_end":15121776,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121777,"byte_end":15121842,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121843,"byte_end":15121908,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121909,"byte_end":15121974,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121975,"byte_end":15121982,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121983,"byte_end":15121986,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15121987,"byte_end":15122059,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122060,"byte_end":15122135,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122136,"byte_end":15122208,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122209,"byte_end":15122285,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122286,"byte_end":15122359,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122360,"byte_end":15122363,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122364,"byte_end":15122380,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122381,"byte_end":15122384,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122385,"byte_end":15122459,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122460,"byte_end":15122527,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122528,"byte_end":15122531,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122532,"byte_end":15122539,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122540,"byte_end":15122571,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122572,"byte_end":15122622,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122623,"byte_end":15122664,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122665,"byte_end":15122700,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122701,"byte_end":15122749,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122750,"byte_end":15122781,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122782,"byte_end":15122830,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122831,"byte_end":15122851,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122852,"byte_end":15122874,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122875,"byte_end":15122882,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122883,"byte_end":15122905,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122906,"byte_end":15122913,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122914,"byte_end":15122917,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122918,"byte_end":15122966,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122967,"byte_end":15122970,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122971,"byte_end":15122982,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15122983,"byte_end":15123009,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123010,"byte_end":15123055,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123056,"byte_end":15123101,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123102,"byte_end":15123147,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123148,"byte_end":15123151,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123152,"byte_end":15123180,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123181,"byte_end":15123226,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123227,"byte_end":15123272,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123273,"byte_end":15123318,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123319,"byte_end":15123326,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123327,"byte_end":15123330,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123331,"byte_end":15123403,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123404,"byte_end":15123480,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123481,"byte_end":15123551,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123552,"byte_end":15123621,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123622,"byte_end":15123659,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123660,"byte_end":15123663,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123664,"byte_end":15123738,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123739,"byte_end":15123793,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123794,"byte_end":15123797,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123798,"byte_end":15123814,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123815,"byte_end":15123818,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123819,"byte_end":15123892,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123893,"byte_end":15123969,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15123970,"byte_end":15124044,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124045,"byte_end":15124058,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124059,"byte_end":15124062,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124063,"byte_end":15124070,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124071,"byte_end":15124102,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124103,"byte_end":15124153,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124154,"byte_end":15124195,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124196,"byte_end":15124231,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124232,"byte_end":15124281,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124282,"byte_end":15124313,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124314,"byte_end":15124362,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124363,"byte_end":15124407,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124408,"byte_end":15124430,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124431,"byte_end":15124438,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124439,"byte_end":15124461,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124462,"byte_end":15124469,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124470,"byte_end":15124473,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124474,"byte_end":15124522,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124523,"byte_end":15124526,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124527,"byte_end":15124538,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124539,"byte_end":15124565,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124566,"byte_end":15124616,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124617,"byte_end":15124667,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124668,"byte_end":15124718,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124719,"byte_end":15124722,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124723,"byte_end":15124743,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124744,"byte_end":15124774,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124775,"byte_end":15124805,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124806,"byte_end":15124836,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124837,"byte_end":15124844,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124845,"byte_end":15124848,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124849,"byte_end":15124922,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124923,"byte_end":15124998,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15124999,"byte_end":15125071,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125072,"byte_end":15125110,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125111,"byte_end":15125114,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125115,"byte_end":15125189,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125190,"byte_end":15125266,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125267,"byte_end":15125340,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125341,"byte_end":15125369,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125370,"byte_end":15125373,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125374,"byte_end":15125390,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125391,"byte_end":15125394,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125395,"byte_end":15125468,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125469,"byte_end":15125545,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125546,"byte_end":15125620,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125621,"byte_end":15125693,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125694,"byte_end":15125705,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125706,"byte_end":15125709,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125710,"byte_end":15125717,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125718,"byte_end":15125749,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125750,"byte_end":15125800,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125801,"byte_end":15125842,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125843,"byte_end":15125878,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125879,"byte_end":15125928,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125929,"byte_end":15125960,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15125961,"byte_end":15126026,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126027,"byte_end":15126047,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126048,"byte_end":15126070,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126071,"byte_end":15126078,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126079,"byte_end":15126086,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126087,"byte_end":15126090,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126091,"byte_end":15126139,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126140,"byte_end":15126143,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126144,"byte_end":15126155,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126156,"byte_end":15126182,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126183,"byte_end":15126233,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126234,"byte_end":15126284,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126285,"byte_end":15126335,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126336,"byte_end":15126339,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126340,"byte_end":15126360,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126361,"byte_end":15126391,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126392,"byte_end":15126422,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126423,"byte_end":15126453,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126454,"byte_end":15126461,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126462,"byte_end":15126465,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126466,"byte_end":15126539,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126540,"byte_end":15126614,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126615,"byte_end":15126689,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126690,"byte_end":15126763,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126764,"byte_end":15126840,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126841,"byte_end":15126874,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126875,"byte_end":15126878,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126879,"byte_end":15126895,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126896,"byte_end":15126899,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126900,"byte_end":15126974,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15126975,"byte_end":15127042,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127043,"byte_end":15127046,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127047,"byte_end":15127054,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127055,"byte_end":15127086,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127087,"byte_end":15127137,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127138,"byte_end":15127179,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127180,"byte_end":15127215,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127216,"byte_end":15127264,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127265,"byte_end":15127296,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127297,"byte_end":15127344,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127345,"byte_end":15127391,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127392,"byte_end":15127414,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127415,"byte_end":15127422,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127423,"byte_end":15127445,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127446,"byte_end":15127453,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127454,"byte_end":15127457,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127458,"byte_end":15127506,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127507,"byte_end":15127510,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127511,"byte_end":15127522,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127523,"byte_end":15127579,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127580,"byte_end":15127641,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127642,"byte_end":15127703,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127704,"byte_end":15127765,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127766,"byte_end":15127773,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127774,"byte_end":15127777,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127778,"byte_end":15127852,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127853,"byte_end":15127873,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127874,"byte_end":15127877,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127878,"byte_end":15127892,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127893,"byte_end":15127896,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127897,"byte_end":15127972,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15127973,"byte_end":15128045,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128046,"byte_end":15128114,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128115,"byte_end":15128191,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128192,"byte_end":15128233,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128234,"byte_end":15128237,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128238,"byte_end":15128308,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128309,"byte_end":15128327,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128328,"byte_end":15128331,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128332,"byte_end":15128339,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128340,"byte_end":15128372,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128373,"byte_end":15128423,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128424,"byte_end":15128468,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128469,"byte_end":15128482,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128483,"byte_end":15128518,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128519,"byte_end":15128550,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/     .new_write(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128551,"byte_end":15128574,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128575,"byte_end":15128582,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128583,"byte_end":15128605,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128606,"byte_end":15128613,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128614,"byte_end":15128617,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128618,"byte_end":15128668,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128669,"byte_end":15128672,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128673,"byte_end":15128684,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128685,"byte_end":15128718,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128719,"byte_end":15128752,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128753,"byte_end":15128786,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128787,"byte_end":15128794,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128795,"byte_end":15128798,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128799,"byte_end":15128868,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128869,"byte_end":15128906,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128907,"byte_end":15128946,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128947,"byte_end":15128992,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15128993,"byte_end":15129040,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15129041,"byte_end":15129071,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15129072,"byte_end":15129105,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1239},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15129667,"byte_end":15129674,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243},{"krate":0,"index":1244},{"krate":0,"index":1245}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15129349,"byte_end":15129404,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15129405,"byte_end":15129408,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15129409,"byte_end":15129484,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15129485,"byte_end":15129565,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15129566,"byte_end":15129625,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1008},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130345,"byte_end":15130370,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":1009}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130260,"byte_end":15130333,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1251},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130722,"byte_end":15130742,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1253}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130391,"byte_end":15130465,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130466,"byte_end":15130469,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130470,"byte_end":15130549,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130550,"byte_end":15130593,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130594,"byte_end":15130597,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130598,"byte_end":15130651,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130652,"byte_end":15130655,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130656,"byte_end":15130686,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131086,"byte_end":15131089,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130995,"byte_end":15131074,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131316,"byte_end":15131323,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131213,"byte_end":15131288,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131293,"byte_end":15131304,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131545,"byte_end":15131561,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131373,"byte_end":15131414,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131419,"byte_end":15131422,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131427,"byte_end":15131500,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131505,"byte_end":15131533,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131982,"byte_end":15132002,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131626,"byte_end":15131660,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131665,"byte_end":15131668,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131673,"byte_end":15131743,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131748,"byte_end":15131823,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131828,"byte_end":15131900,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15131905,"byte_end":15131970,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137258,"byte_end":15137261,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136716,"byte_end":15136791,"line_start":633,"line_end":633,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136796,"byte_end":15136807,"line_start":634,"line_end":634,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136812,"byte_end":15136815,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136820,"byte_end":15136834,"line_start":636,"line_end":636,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136839,"byte_end":15136842,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136847,"byte_end":15136854,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136859,"byte_end":15136890,"line_start":639,"line_end":639,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136895,"byte_end":15136943,"line_start":640,"line_end":640,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136948,"byte_end":15136951,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136956,"byte_end":15136997,"line_start":642,"line_end":642,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137002,"byte_end":15137037,"line_start":643,"line_end":643,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137042,"byte_end":15137073,"line_start":644,"line_end":644,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137078,"byte_end":15137109,"line_start":645,"line_end":645,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137114,"byte_end":15137143,"line_start":646,"line_end":646,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137148,"byte_end":15137168,"line_start":647,"line_end":647,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137173,"byte_end":15137195,"line_start":648,"line_end":648,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137200,"byte_end":15137207,"line_start":649,"line_end":649,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137212,"byte_end":15137234,"line_start":650,"line_end":650,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137239,"byte_end":15137246,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138446,"byte_end":15138456,"line_start":693,"line_end":693,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137925,"byte_end":15137974,"line_start":674,"line_end":674,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137979,"byte_end":15137982,"line_start":675,"line_end":675,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15137987,"byte_end":15138019,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138024,"byte_end":15138027,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138032,"byte_end":15138100,"line_start":678,"line_end":678,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138105,"byte_end":15138108,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138113,"byte_end":15138127,"line_start":680,"line_end":680,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138132,"byte_end":15138135,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138140,"byte_end":15138147,"line_start":682,"line_end":682,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138152,"byte_end":15138183,"line_start":683,"line_end":683,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138188,"byte_end":15138236,"line_start":684,"line_end":684,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138241,"byte_end":15138244,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138249,"byte_end":15138290,"line_start":686,"line_end":686,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138295,"byte_end":15138330,"line_start":687,"line_end":687,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138335,"byte_end":15138356,"line_start":688,"line_end":688,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138361,"byte_end":15138383,"line_start":689,"line_end":689,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138388,"byte_end":15138395,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138400,"byte_end":15138422,"line_start":691,"line_end":691,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138427,"byte_end":15138434,"line_start":692,"line_end":692,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139088,"byte_end":15139101,"line_start":717,"line_end":717,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138555,"byte_end":15138607,"line_start":698,"line_end":698,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138612,"byte_end":15138615,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138620,"byte_end":15138658,"line_start":700,"line_end":700,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138663,"byte_end":15138666,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138671,"byte_end":15138739,"line_start":702,"line_end":702,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138744,"byte_end":15138747,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138752,"byte_end":15138766,"line_start":704,"line_end":704,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138771,"byte_end":15138774,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138779,"byte_end":15138786,"line_start":706,"line_end":706,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138791,"byte_end":15138822,"line_start":707,"line_end":707,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138827,"byte_end":15138875,"line_start":708,"line_end":708,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138880,"byte_end":15138883,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138888,"byte_end":15138929,"line_start":710,"line_end":710,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138934,"byte_end":15138969,"line_start":711,"line_end":711,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15138974,"byte_end":15138998,"line_start":712,"line_end":712,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139003,"byte_end":15139025,"line_start":713,"line_end":713,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139030,"byte_end":15139037,"line_start":714,"line_end":714,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139042,"byte_end":15139064,"line_start":715,"line_end":715,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139069,"byte_end":15139076,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139734,"byte_end":15139747,"line_start":741,"line_end":741,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139201,"byte_end":15139253,"line_start":722,"line_end":722,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139258,"byte_end":15139261,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139266,"byte_end":15139304,"line_start":724,"line_end":724,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139309,"byte_end":15139312,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139317,"byte_end":15139385,"line_start":726,"line_end":726,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139390,"byte_end":15139393,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139398,"byte_end":15139412,"line_start":728,"line_end":728,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139417,"byte_end":15139420,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139425,"byte_end":15139432,"line_start":730,"line_end":730,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139437,"byte_end":15139468,"line_start":731,"line_end":731,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139473,"byte_end":15139521,"line_start":732,"line_end":732,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139526,"byte_end":15139529,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139534,"byte_end":15139575,"line_start":734,"line_end":734,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139580,"byte_end":15139615,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139620,"byte_end":15139644,"line_start":736,"line_end":736,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139649,"byte_end":15139671,"line_start":737,"line_end":737,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139676,"byte_end":15139683,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139688,"byte_end":15139710,"line_start":739,"line_end":739,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139715,"byte_end":15139722,"line_start":740,"line_end":740,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140828,"byte_end":15140844,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139916,"byte_end":15139945,"line_start":749,"line_end":749,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139950,"byte_end":15139953,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15139958,"byte_end":15140030,"line_start":751,"line_end":751,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140035,"byte_end":15140060,"line_start":752,"line_end":752,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140065,"byte_end":15140068,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140073,"byte_end":15140145,"line_start":754,"line_end":754,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140150,"byte_end":15140219,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140224,"byte_end":15140297,"line_start":756,"line_end":756,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140302,"byte_end":15140314,"line_start":757,"line_end":757,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140319,"byte_end":15140322,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140327,"byte_end":15140402,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140407,"byte_end":15140468,"line_start":760,"line_end":760,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140473,"byte_end":15140476,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140481,"byte_end":15140495,"line_start":762,"line_end":762,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140500,"byte_end":15140503,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140508,"byte_end":15140515,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140520,"byte_end":15140551,"line_start":765,"line_end":765,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140556,"byte_end":15140604,"line_start":766,"line_end":766,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140609,"byte_end":15140612,"line_start":767,"line_end":767,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140617,"byte_end":15140658,"line_start":768,"line_end":768,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140663,"byte_end":15140698,"line_start":769,"line_end":769,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140703,"byte_end":15140738,"line_start":770,"line_end":770,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140743,"byte_end":15140765,"line_start":771,"line_end":771,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140770,"byte_end":15140777,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140782,"byte_end":15140804,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140809,"byte_end":15140816,"line_start":774,"line_end":774,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141505,"byte_end":15141524,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15140941,"byte_end":15141004,"line_start":780,"line_end":780,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141009,"byte_end":15141012,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141017,"byte_end":15141068,"line_start":782,"line_end":782,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141073,"byte_end":15141076,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141081,"byte_end":15141149,"line_start":784,"line_end":784,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141154,"byte_end":15141157,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141162,"byte_end":15141176,"line_start":786,"line_end":786,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141181,"byte_end":15141184,"line_start":787,"line_end":787,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141189,"byte_end":15141196,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141201,"byte_end":15141232,"line_start":789,"line_end":789,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141237,"byte_end":15141285,"line_start":790,"line_end":790,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141290,"byte_end":15141293,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141298,"byte_end":15141339,"line_start":792,"line_end":792,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141344,"byte_end":15141379,"line_start":793,"line_end":793,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141384,"byte_end":15141415,"line_start":794,"line_end":794,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141420,"byte_end":15141442,"line_start":795,"line_end":795,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141447,"byte_end":15141454,"line_start":796,"line_end":796,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141459,"byte_end":15141481,"line_start":797,"line_end":797,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141486,"byte_end":15141493,"line_start":798,"line_end":798,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1034},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142183,"byte_end":15142202,"line_start":822,"line_end":822,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141693,"byte_end":15141759,"line_start":805,"line_end":805,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141764,"byte_end":15141767,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141772,"byte_end":15141827,"line_start":807,"line_end":807,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141832,"byte_end":15141835,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141840,"byte_end":15141854,"line_start":809,"line_end":809,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141859,"byte_end":15141862,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141867,"byte_end":15141874,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141879,"byte_end":15141910,"line_start":812,"line_end":812,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141915,"byte_end":15141963,"line_start":813,"line_end":813,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141968,"byte_end":15141971,"line_start":814,"line_end":814,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15141976,"byte_end":15142017,"line_start":815,"line_end":815,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142022,"byte_end":15142057,"line_start":816,"line_end":816,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142062,"byte_end":15142093,"line_start":817,"line_end":817,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142098,"byte_end":15142120,"line_start":818,"line_end":818,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142125,"byte_end":15142132,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142137,"byte_end":15142159,"line_start":820,"line_end":820,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142164,"byte_end":15142171,"line_start":821,"line_end":821,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142756,"byte_end":15142773,"line_start":843,"line_end":843,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142305,"byte_end":15142378,"line_start":827,"line_end":827,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142383,"byte_end":15142401,"line_start":828,"line_end":828,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142406,"byte_end":15142409,"line_start":829,"line_end":829,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142414,"byte_end":15142428,"line_start":830,"line_end":830,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142433,"byte_end":15142436,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142441,"byte_end":15142448,"line_start":832,"line_end":832,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142453,"byte_end":15142484,"line_start":833,"line_end":833,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142489,"byte_end":15142537,"line_start":834,"line_end":834,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142542,"byte_end":15142545,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142550,"byte_end":15142591,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142596,"byte_end":15142631,"line_start":837,"line_end":837,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142636,"byte_end":15142666,"line_start":838,"line_end":838,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142671,"byte_end":15142693,"line_start":839,"line_end":839,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142698,"byte_end":15142705,"line_start":840,"line_end":840,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142710,"byte_end":15142732,"line_start":841,"line_end":841,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142737,"byte_end":15142744,"line_start":842,"line_end":842,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143423,"byte_end":15143431,"line_start":867,"line_end":867,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142874,"byte_end":15142937,"line_start":848,"line_end":848,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142942,"byte_end":15142945,"line_start":849,"line_end":849,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15142950,"byte_end":15143011,"line_start":850,"line_end":850,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143016,"byte_end":15143019,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143024,"byte_end":15143078,"line_start":852,"line_end":852,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143083,"byte_end":15143086,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143091,"byte_end":15143105,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143110,"byte_end":15143113,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143118,"byte_end":15143125,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143130,"byte_end":15143161,"line_start":857,"line_end":857,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143166,"byte_end":15143214,"line_start":858,"line_end":858,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143219,"byte_end":15143222,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143227,"byte_end":15143268,"line_start":860,"line_end":860,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143273,"byte_end":15143308,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143313,"byte_end":15143333,"line_start":862,"line_end":862,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143338,"byte_end":15143360,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143365,"byte_end":15143372,"line_start":864,"line_end":864,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143377,"byte_end":15143399,"line_start":865,"line_end":865,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143404,"byte_end":15143411,"line_start":866,"line_end":866,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143951,"byte_end":15143960,"line_start":887,"line_end":887,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143529,"byte_end":15143592,"line_start":872,"line_end":872,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143597,"byte_end":15143600,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143605,"byte_end":15143619,"line_start":874,"line_end":874,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143624,"byte_end":15143627,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143632,"byte_end":15143639,"line_start":876,"line_end":876,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143644,"byte_end":15143692,"line_start":877,"line_end":877,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143697,"byte_end":15143718,"line_start":878,"line_end":878,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143723,"byte_end":15143758,"line_start":879,"line_end":879,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143763,"byte_end":15143794,"line_start":880,"line_end":880,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143799,"byte_end":15143830,"line_start":881,"line_end":881,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143835,"byte_end":15143864,"line_start":882,"line_end":882,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143869,"byte_end":15143889,"line_start":883,"line_end":883,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143894,"byte_end":15143915,"line_start":884,"line_end":884,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143920,"byte_end":15143927,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15143932,"byte_end":15143939,"line_start":886,"line_end":886,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1038},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144616,"byte_end":15144624,"line_start":912,"line_end":912,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144112,"byte_end":15144165,"line_start":894,"line_end":894,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144170,"byte_end":15144173,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144178,"byte_end":15144192,"line_start":896,"line_end":896,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144197,"byte_end":15144200,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144205,"byte_end":15144212,"line_start":898,"line_end":898,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144217,"byte_end":15144248,"line_start":899,"line_end":899,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144253,"byte_end":15144301,"line_start":900,"line_end":900,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144306,"byte_end":15144309,"line_start":901,"line_end":901,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144314,"byte_end":15144355,"line_start":902,"line_end":902,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144360,"byte_end":15144395,"line_start":903,"line_end":903,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144400,"byte_end":15144431,"line_start":904,"line_end":904,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144436,"byte_end":15144467,"line_start":905,"line_end":905,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144472,"byte_end":15144501,"line_start":906,"line_end":906,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144506,"byte_end":15144526,"line_start":907,"line_end":907,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144531,"byte_end":15144553,"line_start":908,"line_end":908,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144558,"byte_end":15144565,"line_start":909,"line_end":909,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144570,"byte_end":15144592,"line_start":910,"line_end":910,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144597,"byte_end":15144604,"line_start":911,"line_end":911,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145197,"byte_end":15145206,"line_start":933,"line_end":933,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144788,"byte_end":15144842,"line_start":919,"line_end":919,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144847,"byte_end":15144850,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144855,"byte_end":15144869,"line_start":921,"line_end":921,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144874,"byte_end":15144877,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144882,"byte_end":15144889,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144894,"byte_end":15144926,"line_start":924,"line_end":924,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144931,"byte_end":15144981,"line_start":925,"line_end":925,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15144986,"byte_end":15145030,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145035,"byte_end":15145070,"line_start":927,"line_end":927,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145075,"byte_end":15145106,"line_start":928,"line_end":928,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145111,"byte_end":15145134,"line_start":929,"line_end":929,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145139,"byte_end":15145146,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145151,"byte_end":15145173,"line_start":931,"line_end":931,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145178,"byte_end":15145185,"line_start":932,"line_end":932,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145815,"byte_end":15145825,"line_start":955,"line_end":955,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145367,"byte_end":15145416,"line_start":940,"line_end":940,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145421,"byte_end":15145424,"line_start":941,"line_end":941,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145429,"byte_end":15145443,"line_start":942,"line_end":942,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145448,"byte_end":15145451,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145456,"byte_end":15145463,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145468,"byte_end":15145513,"line_start":945,"line_end":945,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145518,"byte_end":15145568,"line_start":946,"line_end":946,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145573,"byte_end":15145629,"line_start":947,"line_end":947,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145634,"byte_end":15145647,"line_start":948,"line_end":948,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145652,"byte_end":15145687,"line_start":949,"line_end":949,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145692,"byte_end":15145723,"line_start":950,"line_end":950,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145728,"byte_end":15145752,"line_start":951,"line_end":951,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145757,"byte_end":15145764,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145769,"byte_end":15145791,"line_start":953,"line_end":953,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15145796,"byte_end":15145803,"line_start":954,"line_end":954,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1269},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15147204,"byte_end":15147214,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15146961,"byte_end":15147048,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15147049,"byte_end":15147052,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15147053,"byte_end":15147091,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15147092,"byte_end":15147130,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1094},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148314,"byte_end":15148317,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15147895,"byte_end":15147955,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15147960,"byte_end":15147963,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15147968,"byte_end":15147978,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15147983,"byte_end":15147986,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15147991,"byte_end":15148063,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148068,"byte_end":15148141,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148146,"byte_end":15148213,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148218,"byte_end":15148221,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148226,"byte_end":15148302,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1095},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149448,"byte_end":15149467,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148475,"byte_end":15148535,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148540,"byte_end":15148543,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148548,"byte_end":15148611,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148616,"byte_end":15148694,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148699,"byte_end":15148766,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148771,"byte_end":15148843,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148848,"byte_end":15148918,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148923,"byte_end":15148946,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148951,"byte_end":15148954,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148959,"byte_end":15148969,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148974,"byte_end":15148977,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15148982,"byte_end":15149057,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149062,"byte_end":15149135,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149140,"byte_end":15149216,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149221,"byte_end":15149294,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149299,"byte_end":15149369,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149374,"byte_end":15149377,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149382,"byte_end":15149436,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1096},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15150033,"byte_end":15150043,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149595,"byte_end":15149645,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149650,"byte_end":15149653,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149658,"byte_end":15149665,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149670,"byte_end":15149689,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149694,"byte_end":15149732,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149737,"byte_end":15149740,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149745,"byte_end":15149779,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149784,"byte_end":15149831,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149836,"byte_end":15149843,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149848,"byte_end":15149855,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149860,"byte_end":15149898,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149903,"byte_end":15149906,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149911,"byte_end":15149964,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15149969,"byte_end":15150009,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15150014,"byte_end":15150021,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1292},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154369,"byte_end":15154390,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154323,"byte_end":15154364,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1294},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154426,"byte_end":15154428,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1291},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154396,"byte_end":15154421,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1291},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154301,"byte_end":15154316,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":1294}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154218,"byte_end":15154274,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":1299},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15156350,"byte_end":15156367,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155164,"byte_end":15155305,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155306,"byte_end":15155309,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155310,"byte_end":15155348,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155349,"byte_end":15155387,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155388,"byte_end":15155391,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155392,"byte_end":15155405,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155406,"byte_end":15155473,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155474,"byte_end":15155477,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155478,"byte_end":15155511,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155512,"byte_end":15155541,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155542,"byte_end":15155545,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155546,"byte_end":15155553,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155554,"byte_end":15155610,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155611,"byte_end":15155645,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155646,"byte_end":15155649,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155650,"byte_end":15155655,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155656,"byte_end":15155703,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155704,"byte_end":15155757,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155758,"byte_end":15155835,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155836,"byte_end":15155871,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155872,"byte_end":15155893,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155894,"byte_end":15155944,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15155945,"byte_end":15156008,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15156009,"byte_end":15156072,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15156073,"byte_end":15156136,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15156137,"byte_end":15156193,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15156194,"byte_end":15156243,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15156244,"byte_end":15156256,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15156257,"byte_end":15156264,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15156265,"byte_end":15156272,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15156273,"byte_end":15156276,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157702,"byte_end":15157705,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"pub fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157260,"byte_end":15157328,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157333,"byte_end":15157336,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157341,"byte_end":15157351,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157356,"byte_end":15157359,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157364,"byte_end":15157443,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157448,"byte_end":15157522,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157527,"byte_end":15157594,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157599,"byte_end":15157602,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157607,"byte_end":15157690,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159016,"byte_end":15159035,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"pub fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157985,"byte_end":15158053,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158058,"byte_end":15158061,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158066,"byte_end":15158136,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158141,"byte_end":15158227,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158232,"byte_end":15158302,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158307,"byte_end":15158384,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158389,"byte_end":15158459,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158464,"byte_end":15158487,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158492,"byte_end":15158495,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158500,"byte_end":15158510,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158515,"byte_end":15158518,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158523,"byte_end":15158605,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158610,"byte_end":15158683,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158688,"byte_end":15158765,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158770,"byte_end":15158843,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158848,"byte_end":15158923,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158928,"byte_end":15158931,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15158936,"byte_end":15159004,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159823,"byte_end":15159833,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159292,"byte_end":15159343,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159348,"byte_end":15159351,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159356,"byte_end":15159363,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159368,"byte_end":15159387,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159392,"byte_end":15159437,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159442,"byte_end":15159445,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159450,"byte_end":15159522,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159527,"byte_end":15159574,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159579,"byte_end":15159586,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159591,"byte_end":15159598,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159603,"byte_end":15159648,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159653,"byte_end":15159656,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159661,"byte_end":15159754,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159759,"byte_end":15159799,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159804,"byte_end":15159811,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1324},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15163929,"byte_end":15163951,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15163882,"byte_end":15163924,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1326},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15163987,"byte_end":15163989,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1323},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15163957,"byte_end":15163982,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Enum","id":{"krate":0,"index":1323},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15163853,"byte_end":15163875,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"pub enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1326}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15163769,"byte_end":15163826,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159},{"krate":0,"index":201},{"krate":0,"index":258},{"krate":0,"index":261},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":390}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mod.rs","byte_start":6878,"byte_end":6908,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40807,"byte_end":40816,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1332}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40630,"byte_end":40694,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40695,"byte_end":40778,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41079,"byte_end":41085,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"pub fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40892,"byte_end":40966,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40971,"byte_end":41041,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41046,"byte_end":41067,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":62},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8905,"byte_end":8922,"line_start":57,"line_end":57,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":63}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7687,"byte_end":7764,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7765,"byte_end":7775,"line_start":18,"line_end":18,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7776,"byte_end":7779,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7780,"byte_end":7845,"line_start":20,"line_end":20,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7846,"byte_end":7920,"line_start":21,"line_end":21,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7921,"byte_end":7924,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":7925,"byte_end":8008,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8009,"byte_end":8012,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8013,"byte_end":8027,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8028,"byte_end":8031,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8032,"byte_end":8045,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8046,"byte_end":8068,"line_start":28,"line_end":28,"column_start":1,"column_end":23}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8069,"byte_end":8109,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8110,"byte_end":8113,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8114,"byte_end":8132,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8133,"byte_end":8154,"line_start":32,"line_end":32,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8155,"byte_end":8200,"line_start":33,"line_end":33,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8201,"byte_end":8242,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8243,"byte_end":8246,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8247,"byte_end":8298,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8299,"byte_end":8362,"line_start":37,"line_end":37,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8363,"byte_end":8384,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8385,"byte_end":8434,"line_start":39,"line_end":39,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8435,"byte_end":8481,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8482,"byte_end":8503,"line_start":41,"line_end":41,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8521,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8522,"byte_end":8603,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8604,"byte_end":8626,"line_start":44,"line_end":44,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8627,"byte_end":8644,"line_start":45,"line_end":45,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8645,"byte_end":8658,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8659,"byte_end":8670,"line_start":47,"line_end":47,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8671,"byte_end":8674,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8675,"byte_end":8708,"line_start":49,"line_end":49,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8709,"byte_end":8784,"line_start":50,"line_end":50,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8785,"byte_end":8812,"line_start":51,"line_end":51,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8813,"byte_end":8824,"line_start":52,"line_end":52,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8825,"byte_end":8828,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8829,"byte_end":8879,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8880,"byte_end":8885,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":8886,"byte_end":8893,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":66},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9342,"byte_end":9367,"line_start":69,"line_end":69,"column_start":12,"column_end":37},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n was cancelled\n","sig":null,"attributes":[{"value":"/ A Future that is resolved once the corresponding [`CancellationToken`]","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9189,"byte_end":9263,"line_start":66,"line_end":66,"column_start":1,"column_end":75}},{"value":"/ was cancelled","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9264,"byte_end":9281,"line_start":67,"line_end":67,"column_start":1,"column_end":18}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9282,"byte_end":9330,"line_start":68,"line_end":68,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11875,"byte_end":11878,"line_start":143,"line_end":143,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"pub fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11800,"byte_end":11863,"line_start":142,"line_end":142,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13931,"byte_end":13942,"line_start":205,"line_end":205,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"pub fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12668,"byte_end":12739,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12744,"byte_end":12777,"line_start":168,"line_end":168,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12782,"byte_end":12785,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12790,"byte_end":12861,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12866,"byte_end":12898,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12903,"byte_end":12906,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12911,"byte_end":12925,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12930,"byte_end":12933,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12938,"byte_end":12951,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12956,"byte_end":12978,"line_start":176,"line_end":176,"column_start":5,"column_end":27}},{"value":"/ use tokio::scope::CancellationToken;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":12983,"byte_end":13023,"line_start":177,"line_end":177,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13028,"byte_end":13031,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13036,"byte_end":13054,"line_start":179,"line_end":179,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13059,"byte_end":13080,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13085,"byte_end":13130,"line_start":181,"line_end":181,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13135,"byte_end":13181,"line_start":182,"line_end":182,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13186,"byte_end":13189,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13194,"byte_end":13245,"line_start":184,"line_end":184,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13250,"byte_end":13313,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13318,"byte_end":13339,"line_start":186,"line_end":186,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13344,"byte_end":13392,"line_start":187,"line_end":187,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13397,"byte_end":13443,"line_start":188,"line_end":188,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13448,"byte_end":13469,"line_start":189,"line_end":189,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13474,"byte_end":13491,"line_start":190,"line_end":190,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13496,"byte_end":13577,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13582,"byte_end":13604,"line_start":192,"line_end":192,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13609,"byte_end":13626,"line_start":193,"line_end":193,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13631,"byte_end":13644,"line_start":194,"line_end":194,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13649,"byte_end":13660,"line_start":195,"line_end":195,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13665,"byte_end":13668,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13673,"byte_end":13706,"line_start":197,"line_end":197,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13711,"byte_end":13786,"line_start":198,"line_end":198,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13791,"byte_end":13818,"line_start":199,"line_end":199,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13823,"byte_end":13834,"line_start":200,"line_end":200,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13839,"byte_end":13842,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13847,"byte_end":13897,"line_start":202,"line_end":202,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13902,"byte_end":13907,"line_start":203,"line_end":203,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":13912,"byte_end":13919,"line_start":204,"line_end":204,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16517,"byte_end":16523,"line_start":263,"line_end":263,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"pub fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16328,"byte_end":16400,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16405,"byte_end":16425,"line_start":260,"line_end":260,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16430,"byte_end":16433,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16438,"byte_end":16505,"line_start":262,"line_end":262,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16651,"byte_end":16663,"line_start":268,"line_end":268,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"pub fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` had been cancelled\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` had been cancelled","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16575,"byte_end":16639,"line_start":267,"line_end":267,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16814,"byte_end":16823,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"pub fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.\n","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":16728,"byte_end":16802,"line_start":272,"line_end":272,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17225,"byte_end":17235,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"pub fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17062,"byte_end":17103,"line_start":281,"line_end":281,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17108,"byte_end":17111,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17116,"byte_end":17188,"line_start":283,"line_end":283,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17193,"byte_end":17213,"line_start":284,"line_end":284,"column_start":5,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1406},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71395,"byte_end":71405,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1410}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71257,"byte_end":71314,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71315,"byte_end":71318,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":71319,"byte_end":71366,"line_start":16,"line_end":16,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72128,"byte_end":72131,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"pub fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSender`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72086,"byte_end":72116,"line_start":38,"line_end":38,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72846,"byte_end":72856,"line_start":57,"line_end":57,"column_start":12,"column_end":22},"name":"start_send","qualname":"<PollSender<T>>::start_send","value":"pub fn start_send(&mut Self, T) -> Result<(), SendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Start sending a new item.","sig":null,"attributes":[{"value":"/ Start sending a new item.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72334,"byte_end":72363,"line_start":47,"line_end":47,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72368,"byte_end":72371,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This method panics if a send is currently in progress. To ensure that no","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72376,"byte_end":72452,"line_start":49,"line_end":49,"column_start":5,"column_end":81}},{"value":"/ send is in progress, call `poll_send_done` first until it returns","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72457,"byte_end":72526,"line_start":50,"line_end":50,"column_start":5,"column_end":74}},{"value":"/ `Poll::Ready`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72531,"byte_end":72549,"line_start":51,"line_end":51,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72554,"byte_end":72557,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ If this method returns an error, that indicates that the channel is","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72562,"byte_end":72633,"line_start":53,"line_end":53,"column_start":5,"column_end":76}},{"value":"/ closed. Note that this method is not guaranteed to return an error if","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72638,"byte_end":72711,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ the channel is closed, but in that case the error would be reported by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72716,"byte_end":72790,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ the first call to `poll_send_done`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72795,"byte_end":72834,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74377,"byte_end":74391,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"poll_send_done","qualname":"<PollSender<T>>::poll_send_done","value":"pub fn poll_send_done(&mut Self, &mut Context)\n-> Poll<Result<(), SendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" If a send is in progress, poll for its completion. If no send is in progress,\n this method returns `Poll::Ready(Ok(()))`.","sig":null,"attributes":[{"value":"/ If a send is in progress, poll for its completion. If no send is in progress,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73280,"byte_end":73361,"line_start":71,"line_end":71,"column_start":5,"column_end":86}},{"value":"/ this method returns `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73366,"byte_end":73412,"line_start":72,"line_end":72,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73417,"byte_end":73420,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ This method can return the following values:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73425,"byte_end":73473,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73478,"byte_end":73481,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Ready(Ok(()))` if the in-progress send has been completed, or there is","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73486,"byte_end":73570,"line_start":76,"line_end":76,"column_start":5,"column_end":89}},{"value":"/    no send in progress (even if the channel is closed).","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73575,"byte_end":73634,"line_start":77,"line_end":77,"column_start":5,"column_end":64}},{"value":"/  - `Poll::Ready(Err(err))` if the in-progress send failed because the channel has","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73639,"byte_end":73724,"line_start":78,"line_end":78,"column_start":5,"column_end":90}},{"value":"/    been closed.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73729,"byte_end":73748,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/  - `Poll::Pending` if a send is in progress, but it could not complete now.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73753,"byte_end":73832,"line_start":80,"line_end":80,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73837,"byte_end":73840,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73845,"byte_end":73920,"line_start":82,"line_end":82,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when the message is sent, or when the entire channel","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":73925,"byte_end":74001,"line_start":83,"line_end":83,"column_start":5,"column_end":81}},{"value":"/ is closed (but not if just this sender is closed by","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74006,"byte_end":74061,"line_start":84,"line_end":84,"column_start":5,"column_end":60}},{"value":"/ `close_this_sender`). Note that on multiple calls to `poll_send_done`,","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74066,"byte_end":74140,"line_start":85,"line_end":85,"column_start":5,"column_end":79}},{"value":"/ only the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74145,"byte_end":74218,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74223,"byte_end":74257,"line_start":87,"line_end":87,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74262,"byte_end":74265,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ If this method returns `Poll::Ready`, then `start_send` is guaranteed to","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74270,"byte_end":74346,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ not panic.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74351,"byte_end":74365,"line_start":90,"line_end":90,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75025,"byte_end":75033,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"is_ready","qualname":"<PollSender<T>>::is_ready","value":"pub fn is_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel is ready to send more messages now.","sig":null,"attributes":[{"value":"/ Check whether the channel is ready to send more messages now.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74777,"byte_end":74842,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74847,"byte_end":74850,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then `start_send` is guaranteed to not","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74855,"byte_end":74928,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ panic.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74933,"byte_end":74943,"line_start":109,"line_end":109,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74948,"byte_end":74951,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, this method returns `true`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":74956,"byte_end":75013,"line_start":111,"line_end":111,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75145,"byte_end":75154,"line_start":117,"line_end":117,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"pub fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether the channel has been closed.\n","sig":null,"attributes":[{"value":"/ Check whether the channel has been closed.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75087,"byte_end":75133,"line_start":116,"line_end":116,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75495,"byte_end":75506,"line_start":128,"line_end":128,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSender<T>>::clone_inner","value":"pub fn clone_inner(&Self) -> Option<Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Clone the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Clone the underlying `Sender`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75296,"byte_end":75330,"line_start":124,"line_end":124,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75335,"byte_end":75338,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75343,"byte_end":75416,"line_start":126,"line_end":126,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75421,"byte_end":75483,"line_start":127,"line_end":127,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75811,"byte_end":75820,"line_start":136,"line_end":136,"column_start":12,"column_end":21},"name":"inner_ref","qualname":"<PollSender<T>>::inner_ref","value":"pub fn inner_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Access the underlying `Sender`.","sig":null,"attributes":[{"value":"/ Access the underlying `Sender`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75611,"byte_end":75646,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75651,"byte_end":75654,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ If this method returns `None`, then the channel is closed. (But it is","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75659,"byte_end":75732,"line_start":134,"line_end":134,"column_start":5,"column_end":78}},{"value":"/ not guaranteed to return `None` if the channel is closed.)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75737,"byte_end":75799,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76520,"byte_end":76537,"line_start":152,"line_end":152,"column_start":12,"column_end":29},"name":"close_this_sender","qualname":"<PollSender<T>>::close_this_sender","value":"pub fn close_this_sender(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Close this sender. No more messages can be sent from this sender.","sig":null,"attributes":[{"value":"/ Close this sender. No more messages can be sent from this sender.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":75971,"byte_end":76040,"line_start":141,"line_end":141,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76045,"byte_end":76048,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ Note that this only closes the channel from the view-point of this","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76053,"byte_end":76123,"line_start":143,"line_end":143,"column_start":5,"column_end":75}},{"value":"/ sender. The channel remains open until all senders have gone away, or","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76128,"byte_end":76201,"line_start":144,"line_end":144,"column_start":5,"column_end":78}},{"value":"/ until the [`Receiver`] closes the channel.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76206,"byte_end":76252,"line_start":145,"line_end":145,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76257,"byte_end":76260,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ If there is a send in progress when this method is called, that send is","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76265,"byte_end":76340,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ unaffected by this operation, and `poll_send_done` can still be called","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76345,"byte_end":76419,"line_start":148,"line_end":148,"column_start":5,"column_end":79}},{"value":"/ to complete that send.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76424,"byte_end":76450,"line_start":149,"line_end":149,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76455,"byte_end":76458,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76463,"byte_end":76508,"line_start":151,"line_end":151,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76703,"byte_end":76713,"line_start":159,"line_end":159,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"pub fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Abort the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Abort the current in-progress send, if any.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76590,"byte_end":76637,"line_start":156,"line_end":156,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76642,"byte_end":76645,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76650,"byte_end":76691,"line_start":158,"line_end":158,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":301},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79225,"byte_end":79238,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79094,"byte_end":79167,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79168,"byte_end":79171,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79172,"byte_end":79213,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79432,"byte_end":79435,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"pub fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79387,"byte_end":79420,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79599,"byte_end":79604,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"pub fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79562,"byte_end":79587,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79710,"byte_end":79721,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"pub fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79656,"byte_end":79698,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79836,"byte_end":79846,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"pub fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79791,"byte_end":79824,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80580,"byte_end":80592,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"pub fn poll_acquire(&mut Self, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79907,"byte_end":79955,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79960,"byte_end":79963,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79968,"byte_end":80009,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80014,"byte_end":80017,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80022,"byte_end":80084,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80089,"byte_end":80149,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80154,"byte_end":80214,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80219,"byte_end":80222,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80227,"byte_end":80302,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80307,"byte_end":80375,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80380,"byte_end":80456,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80461,"byte_end":80529,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":80534,"byte_end":80568,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82020,"byte_end":82037,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"pub fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81736,"byte_end":81788,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81793,"byte_end":81796,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81801,"byte_end":81877,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81882,"byte_end":81916,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81921,"byte_end":81924,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":81929,"byte_end":82008,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82497,"byte_end":82508,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"pub fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82110,"byte_end":82152,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82157,"byte_end":82160,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82165,"byte_end":82238,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82243,"byte_end":82283,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82288,"byte_end":82291,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82296,"byte_end":82366,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82371,"byte_end":82405,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82410,"byte_end":82413,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82418,"byte_end":82485,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":358},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83651,"byte_end":83668,"line_start":13,"line_end":13,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":360}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send>>`.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83451,"byte_end":83508,"line_start":9,"line_end":9,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83509,"byte_end":83512,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83513,"byte_end":83580,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83581,"byte_end":83639,"line_start":12,"line_end":12,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83846,"byte_end":83849,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture<T>>::new","value":"pub fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83763,"byte_end":83834,"line_start":18,"line_end":18,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":365},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84430,"byte_end":84433,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture<T>>::set","value":"pub fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84215,"byte_end":84267,"line_start":33,"line_end":33,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84272,"byte_end":84275,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84280,"byte_end":84352,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84357,"byte_end":84418,"line_start":36,"line_end":36,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":367},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84876,"byte_end":84883,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture<T>>::try_set","value":"pub fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'static","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84635,"byte_end":84687,"line_start":46,"line_end":46,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84692,"byte_end":84695,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84700,"byte_end":84773,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84778,"byte_end":84848,"line_start":49,"line_end":49,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":84853,"byte_end":84864,"line_start":50,"line_end":50,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86723,"byte_end":86730,"line_start":107,"line_end":107,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture<T>>::get_pin","value":"pub fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86659,"byte_end":86711,"line_start":106,"line_end":106,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87016,"byte_end":87020,"line_start":114,"line_end":114,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture<T>>::poll","value":"pub fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":86961,"byte_end":87004,"line_start":113,"line_end":113,"column_start":5,"column_end":48}}]},{"kind":"Mod","id":{"krate":0,"index":393},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","parent":null,"children":[{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":418},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":1414},{"krate":0,"index":1423},{"krate":0,"index":1427},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":437},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":457}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88133,"byte_end":88168,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1417},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90115,"byte_end":90119,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1420},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90128,"byte_end":90133,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1414},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1414},"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90096,"byte_end":90102,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"pub enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1417},{"krate":0,"index":1420}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88345,"byte_end":88451,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88452,"byte_end":88455,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88456,"byte_end":88546,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88547,"byte_end":88550,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88551,"byte_end":88586,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88587,"byte_end":88590,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88591,"byte_end":88604,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88605,"byte_end":88608,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88609,"byte_end":88646,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88647,"byte_end":88650,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88651,"byte_end":88670,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88671,"byte_end":88713,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88714,"byte_end":88764,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88765,"byte_end":88816,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88817,"byte_end":88835,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88836,"byte_end":88857,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88858,"byte_end":88900,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88901,"byte_end":88934,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88935,"byte_end":88951,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":88952,"byte_end":89046,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89047,"byte_end":89057,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89058,"byte_end":89061,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89062,"byte_end":89109,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89110,"byte_end":89115,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89116,"byte_end":89123,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89124,"byte_end":89127,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89328,"byte_end":89331,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89332,"byte_end":89418,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89419,"byte_end":89429,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89430,"byte_end":89433,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89434,"byte_end":89441,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89442,"byte_end":89477,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89478,"byte_end":89520,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89521,"byte_end":89571,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89572,"byte_end":89623,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89624,"byte_end":89627,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89628,"byte_end":89646,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89647,"byte_end":89668,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89669,"byte_end":89711,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89712,"byte_end":89759,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89760,"byte_end":89776,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89777,"byte_end":89826,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89827,"byte_end":89837,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89838,"byte_end":89841,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89842,"byte_end":89875,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89876,"byte_end":89916,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89917,"byte_end":89949,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89950,"byte_end":89955,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89956,"byte_end":89963,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":89964,"byte_end":89986,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071771,"byte_end":15071781,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":533}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071932,"byte_end":15071942,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15072269,"byte_end":15072279,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":539},{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15082509,"byte_end":15082518,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15082750,"byte_end":15082760,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15082911,"byte_end":15082920,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15083275,"byte_end":15083285,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15083531,"byte_end":15083539,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15083636,"byte_end":15083644,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15083755,"byte_end":15083763,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15083863,"byte_end":15083871,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15083981,"byte_end":15083991,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15092278,"byte_end":15092288,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095124,"byte_end":15095130,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":753},{"krate":0,"index":754}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15098986,"byte_end":15098992,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":763},{"krate":0,"index":764},{"krate":0,"index":765},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15104307,"byte_end":15104313,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":773},{"krate":0,"index":774}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15104629,"byte_end":15104635,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15105350,"byte_end":15105356,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":787}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15106396,"byte_end":15106407,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15107334,"byte_end":15107344,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":842},{"krate":0,"index":843}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108273,"byte_end":15108283,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":849},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15110380,"byte_end":15110390,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":858},{"krate":0,"index":859}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15110703,"byte_end":15110713,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":867},{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15111439,"byte_end":15111449,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":872}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15112428,"byte_end":15112439,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15112795,"byte_end":15112806,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114915,"byte_end":15114926,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15115690,"byte_end":15115701,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":945},{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15115942,"byte_end":15115953,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":950}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130968,"byte_end":15130988,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1014},{"krate":0,"index":1015},{"krate":0,"index":1016}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15134322,"byte_end":15134342,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15135228,"byte_end":15135248,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1022},{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136589,"byte_end":15136609,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136702,"byte_end":15136709,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1034},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037},{"krate":0,"index":1038},{"krate":0,"index":1040},{"krate":0,"index":1042},{"krate":0,"index":1044},{"krate":0,"index":1045}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15146308,"byte_end":15146315,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1047}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15146441,"byte_end":15146466,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15146624,"byte_end":15146649,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1051}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15146784,"byte_end":15146809,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15147878,"byte_end":15147888,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15150430,"byte_end":15150440,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1101},{"krate":0,"index":1102},{"krate":0,"index":1103},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15153816,"byte_end":15153826,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154149,"byte_end":15154159,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1111}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154466,"byte_end":15154481,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154763,"byte_end":15154778,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154895,"byte_end":15154910,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157236,"byte_end":15157253,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159902,"byte_end":15159919,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15163211,"byte_end":15163228,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15163592,"byte_end":15163609,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1178}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15164027,"byte_end":15164049,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15164378,"byte_end":15164400,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1182}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15164531,"byte_end":15164553,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40876,"byte_end":40885,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41245,"byte_end":41254,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9125,"byte_end":9142,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9167,"byte_end":9184,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9918,"byte_end":9943,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10017,"byte_end":10034,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10259,"byte_end":10276,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10682,"byte_end":10699,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11669,"byte_end":11686,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":80}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11776,"byte_end":11793,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":117},{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42135,"byte_end":42143,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42393,"byte_end":42401,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179},{"krate":0,"index":180}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42506,"byte_end":42514,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42823,"byte_end":42833,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72066,"byte_end":72076,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76937,"byte_end":76947,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":77351,"byte_end":77361,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79367,"byte_end":79380,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82592,"byte_end":82605,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82819,"byte_end":82832,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82950,"byte_end":82963,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":83175,"byte_end":83188,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83736,"byte_end":83753,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":369},{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87127,"byte_end":87144,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":376},{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87434,"byte_end":87451,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87669,"byte_end":87686,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87782,"byte_end":87799,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87824,"byte_end":87841,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87985,"byte_end":88002,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90739,"byte_end":90745,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90988,"byte_end":90994,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91267,"byte_end":91273,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91601,"byte_end":91607,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91961,"byte_end":91967,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":92519,"byte_end":92525,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":707,"byte_end":712,"line_start":29,"line_end":29,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":511}},{"kind":"Mod","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/mod.rs","byte_start":15070183,"byte_end":15070199,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":954}},{"kind":"Mod","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":889,"byte_end":893,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/lib.rs","byte_start":904,"byte_end":910,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":393}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071771,"byte_end":15071781,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1191},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15071932,"byte_end":15071942,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/bytes_codec.rs","byte_start":15072269,"byte_end":15072279,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1191},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15082509,"byte_end":15082518,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15082750,"byte_end":15082760,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15082911,"byte_end":15082920,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1215},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15083275,"byte_end":15083285,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":639},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15083531,"byte_end":15083539,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2603}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15083636,"byte_end":15083644,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2606}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15083755,"byte_end":15083763,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2603}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15083863,"byte_end":15083871,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1222},"to":{"krate":2,"index":2606}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15083981,"byte_end":15083991,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1563},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_impl.rs","byte_start":15092278,"byte_end":15092288,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1563},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15095124,"byte_end":15095130,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15098986,"byte_end":15098992,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1513},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15104307,"byte_end":15104313,"line_start":254,"line_end":254,"column_start":23,"column_end":29},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1513},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15104629,"byte_end":15104635,"line_start":267,"line_end":267,"column_start":27,"column_end":33},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1513},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15105350,"byte_end":15105356,"line_start":292,"line_end":292,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1513},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed.rs","byte_start":15106396,"byte_end":15106407,"line_start":330,"line_end":330,"column_start":12,"column_end":23},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15107334,"byte_end":15107344,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15108273,"byte_end":15108283,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15110380,"byte_end":15110390,"line_start":123,"line_end":123,"column_start":23,"column_end":33},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1472},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15110703,"byte_end":15110713,"line_start":136,"line_end":136,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1472},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_read.rs","byte_start":15111439,"byte_end":15111449,"line_start":159,"line_end":159,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1472},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15112428,"byte_end":15112439,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15112795,"byte_end":15112806,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1431},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15114915,"byte_end":15114926,"line_start":103,"line_end":103,"column_start":27,"column_end":38},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1431},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15115690,"byte_end":15115701,"line_start":129,"line_end":129,"column_start":23,"column_end":34},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1431},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/framed_write.rs","byte_start":15115942,"byte_end":15115953,"line_start":140,"line_end":140,"column_start":27,"column_end":38},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1431},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15130968,"byte_end":15130988,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1251},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15134322,"byte_end":15134342,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15135228,"byte_end":15135248,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1251},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136589,"byte_end":15136609,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1251},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15136702,"byte_end":15136709,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1239},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15146308,"byte_end":15146315,"line_start":973,"line_end":973,"column_start":18,"column_end":25},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1239},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15146441,"byte_end":15146466,"line_start":981,"line_end":981,"column_start":21,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1008},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15146624,"byte_end":15146649,"line_start":987,"line_end":987,"column_start":23,"column_end":48},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1008},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/length_delimited.rs","byte_start":15146784,"byte_end":15146809,"line_start":993,"line_end":993,"column_start":19,"column_end":44},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1008},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15147878,"byte_end":15147888,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1269},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15150430,"byte_end":15150440,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15153816,"byte_end":15153826,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1269},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154149,"byte_end":15154159,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1269},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154466,"byte_end":15154481,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154763,"byte_end":15154778,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1291},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/lines_codec.rs","byte_start":15154895,"byte_end":15154910,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1291},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15157236,"byte_end":15157253,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1299},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15159902,"byte_end":15159919,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1299},"to":{"krate":0,"index":561}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15163211,"byte_end":15163228,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1299},"to":{"krate":0,"index":578}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15163592,"byte_end":15163609,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1299},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15164027,"byte_end":15164049,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":9350}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15164378,"byte_end":15164400,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1323},"to":{"krate":2,"index":2910}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/codec/any_delimiter_codec.rs","byte_start":15164531,"byte_end":15164553,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1323},"to":{"krate":1,"index":2339}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":40876,"byte_end":40885,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token/guard.rs","byte_start":41245,"byte_end":41254,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1331},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9125,"byte_end":9142,"line_start":63,"line_end":63,"column_start":22,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9167,"byte_end":9184,"line_start":64,"line_end":64,"column_start":22,"column_end":39},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":9918,"byte_end":9943,"line_start":81,"line_end":81,"column_start":26,"column_end":51},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10017,"byte_end":10034,"line_start":85,"line_end":85,"column_start":27,"column_end":44},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10259,"byte_end":10276,"line_start":93,"line_end":93,"column_start":16,"column_end":33},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":10682,"byte_end":10699,"line_start":107,"line_end":107,"column_start":15,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11669,"byte_end":11686,"line_start":135,"line_end":135,"column_start":18,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":62},"to":{"krate":2,"index":2982}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":11776,"byte_end":11793,"line_start":141,"line_end":141,"column_start":6,"column_end":23},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":62},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":17905,"byte_end":17930,"line_start":312,"line_end":312,"column_start":31,"column_end":56},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":18102,"byte_end":18127,"line_start":318,"line_end":318,"column_start":21,"column_end":46},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":19562,"byte_end":19587,"line_start":354,"line_end":354,"column_start":19,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":66},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":20775,"byte_end":20789,"line_start":388,"line_end":388,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21123,"byte_end":21140,"line_start":404,"line_end":404,"column_start":6,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":107},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":21740,"byte_end":21757,"line_start":429,"line_end":429,"column_start":6,"column_end":23},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":22615,"byte_end":22628,"line_start":457,"line_end":457,"column_start":6,"column_end":19},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/cancellation_token.rs","byte_start":23813,"byte_end":23835,"line_start":495,"line_end":495,"column_start":6,"column_end":28},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":124},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42135,"byte_end":42143,"line_start":25,"line_end":25,"column_start":9,"column_end":17},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1390},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42393,"byte_end":42401,"line_start":37,"line_end":37,"column_start":19,"column_end":27},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1390},"to":{"krate":2,"index":3215}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42506,"byte_end":42514,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1390},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/intrusive_double_linked_list.rs","byte_start":42823,"byte_end":42833,"line_start":59,"line_end":59,"column_start":9,"column_end":19},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1399},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":72066,"byte_end":72076,"line_start":37,"line_end":37,"column_start":25,"column_end":35},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1406},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":76937,"byte_end":76947,"line_start":170,"line_end":170,"column_start":19,"column_end":29},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1406},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/mpsc.rs","byte_start":77351,"byte_end":77361,"line_start":182,"line_end":182,"column_start":37,"column_end":47},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1406},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":79367,"byte_end":79380,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82592,"byte_end":82605,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":301},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82819,"byte_end":82832,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2625}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":82950,"byte_end":82963,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/poll_semaphore.rs","byte_start":83175,"byte_end":83188,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":301},"to":{"krate":2,"index":2901}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":83736,"byte_end":83753,"line_start":17,"line_end":17,"column_start":9,"column_end":26},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":358},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87127,"byte_end":87144,"line_start":119,"line_end":119,"column_start":20,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87434,"byte_end":87451,"line_start":129,"line_end":129,"column_start":25,"column_end":42},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3004}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87669,"byte_end":87686,"line_start":134,"line_end":134,"column_start":25,"column_end":42},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3016}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87782,"byte_end":87799,"line_start":137,"line_end":137,"column_start":19,"column_end":36},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3045}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87824,"byte_end":87841,"line_start":139,"line_end":139,"column_start":18,"column_end":35},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":3239}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/sync/reusable_box.rs","byte_start":87985,"byte_end":88002,"line_start":147,"line_end":147,"column_start":24,"column_end":41},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":358},"to":{"krate":2,"index":9343}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90739,"byte_end":90745,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1414},"to":{"krate":2,"index":12611}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":90988,"byte_end":90994,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1414},"to":{"krate":22,"index":227}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91267,"byte_end":91273,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1414},"to":{"krate":22,"index":185}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91601,"byte_end":91607,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1414},"to":{"krate":22,"index":266}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":91961,"byte_end":91967,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1414},"to":{"krate":22,"index":306}},{"span":{"file_name":"/home/saif/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.6.9/src/either.rs","byte_start":92519,"byte_end":92525,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1414},"to":{"krate":20,"index":96}}]}